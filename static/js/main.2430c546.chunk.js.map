{"version":3,"sources":["components/view/background/Background.tsx","components/view/CreateRoom.tsx","components/view/Chat.tsx","components/view/SignUp.tsx","components/view/Login.tsx","components/util/Constants.ts","components/util/Auth.ts","components/util/ProtectedRoute.tsx","components/util/GeneratePinAsString.tsx","components/Controller/Controller.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Background","className","CreateRoom","prop","createRoomFunc","connectToWebsocketFunc","logOutFunc","joinRoomFunc","roomIDRef","onClick","viewBox","fill","fillOpacity","d","type","placeholder","ref","Chat","props","username","roomId","messageRef","sendMessage","currentDataFunc","messages","leaveRoomFunc","useState","toggleMenu","setToggleMenu","useEffect","getDash","document","getElementById","getChat","style","left","right","id","map","message","source","user","SignUp","signUpFunc","usernameRef","passRef","passAgainRef","to","Login","logInFunc","GRAPHQL_API","saveToFirestoreQuery","nickname","password","saveUserChatRoomToFirestoreQuery","userId","loginUserQuery","logoutUserQuery","isRoomIDAvailableQuery","createNewRoomQuery","setUserCurrentRoomQuery","joinUserToRoomQuery","leaveCurrentRoomQuery","authenticated","this","a","loginQuery","GraphQLQueries","axios","post","query","loginResult","data","loginUser","logoutQuery","logoutResult","logoutUser","connectedResult","getUser","connected","ProtectedRoute","logged","rest","userIdStr","sessionStorage","getItem","parseInt","Auth","isUserLogged","then","res","generatePinAsString","numberOfDigits","numberToString","i","Math","floor","random","toString","Controller","currentUser","setCurrentUser","currentRoom","setCurrentRoom","messagess","setMessagess","websocket","setWebsocket","useRef","history","useHistory","current","value","saveUserQuery","saveUserResult","newUserId","saveToFirestore","setItem","push","alert","loggedQuery","loggedResult","loggedUserResult","loggedUserId","getUserByName","logout","createRoom","roomAvailableQuery","isRoomIDAvailable","createRoomQuery","saveRoomToUserQuery","userDataResult","length","joinRoomQuery","joinUserToRoom","leaveRoomQuery","close","payload","messageId","send","JSON","stringify","onmessage","localRoom","localUser","incomingMessage","parse","exact","path","socket","WebSocket","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2430c546.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Background.css\";\r\n\r\n// export default function Background() {\r\nconst Background: React.FC = () => {\r\n  return (\r\n    <div className=\"cover\">\r\n      <div className=\"container\">\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n        <div className=\"frame\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import React from \"react\";\r\nimport \"./CreateRoom.css\";\r\n\r\ninterface IViewProps {\r\n  createRoomFunc: () => void;\r\n  connectToWebsocketFunc: () => void;\r\n  logOutFunc: () => void;\r\n  joinRoomFunc: () => void;\r\n  roomIDRef: any;\r\n}\r\n\r\nconst CreateRoom: React.FC<IViewProps> = (prop) => {\r\n  const {\r\n    createRoomFunc,\r\n    connectToWebsocketFunc,\r\n    logOutFunc,\r\n    joinRoomFunc,\r\n    roomIDRef,\r\n  } = prop;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pinGeneratorContainer\">\r\n        <div className=\"logo\"></div>\r\n        <div className=\"title\">Chit - Chat</div>\r\n        <div className=\"explanation\">\r\n          Press \"Create room\" to create a new chatroom or enter a room Id press\r\n          \"Join room\" to join a room.\r\n        </div>\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => {\r\n            createRoomFunc();\r\n            connectToWebsocketFunc();\r\n          }}\r\n        >\r\n          Create room\r\n        </button>\r\n        <div className=\"inputFields\">\r\n          <div className=\"username\">\r\n            <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n              <path\r\n                fill=\"#fff\"\r\n                fillOpacity=\"0.4\"\r\n                d=\"M17.659,3.681H8.468c-0.211,0-0.383,0.172-0.383,0.383v2.681H2.341c-0.21,0-0.383,0.172-0.383,0.383v6.126c0,0.211,0.172,0.383,0.383,0.383h1.532v2.298c0,0.566,0.554,0.368,0.653,0.27l2.569-2.567h4.437c0.21,0,0.383-0.172,0.383-0.383v-2.681h1.013l2.546,2.567c0.242,0.249,0.652,0.065,0.652-0.27v-2.298h1.533c0.211,0,0.383-0.172,0.383-0.382V4.063C18.042,3.853,17.87,3.681,17.659,3.681 M11.148,12.87H6.937c-0.102,0-0.199,0.04-0.27,0.113l-2.028,2.025v-1.756c0-0.211-0.172-0.383-0.383-0.383H2.724V7.51h5.361v2.68c0,0.21,0.172,0.382,0.383,0.382h2.68V12.87z M17.276,9.807h-1.533c-0.211,0-0.383,0.172-0.383,0.383v1.755L13.356,9.92c-0.07-0.073-0.169-0.113-0.27-0.113H8.851v-5.36h8.425V9.807z\"\r\n              ></path>\r\n            </svg>\r\n            <input\r\n              type=\"username\"\r\n              className=\"userInput\"\r\n              placeholder=\"Room ID\"\r\n              ref={roomIDRef}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => {\r\n            joinRoomFunc();\r\n            connectToWebsocketFunc();\r\n          }}\r\n        >\r\n          Join room\r\n        </button>\r\n        <button className=\"button\" onClick={() => logOutFunc()}>\r\n          Log out\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateRoom;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\n\r\ninterface IChatProps {\r\n  username: string;\r\n  roomId: string;\r\n  messageRef: any;\r\n  sendMessage: () => any;\r\n  currentDataFunc: () => void;\r\n  messages: any;\r\n  leaveRoomFunc: () => void;\r\n}\r\n\r\nconst Chat: React.FC<IChatProps> = (props) => {\r\n  const {\r\n    username,\r\n    roomId,\r\n    messageRef,\r\n    sendMessage,\r\n    currentDataFunc,\r\n    messages,\r\n    leaveRoomFunc,\r\n  } = props;\r\n\r\n  const [toggleMenu, setToggleMenu] = useState<boolean>(true);\r\n\r\n  const openCloseMobileMenu = (): void => {\r\n    setToggleMenu(!toggleMenu);\r\n    const getDash = document.getElementById(\"dash\");\r\n    const getChat = document.getElementById(\"chat\");\r\n\r\n    if (toggleMenu === false) {\r\n      if (getDash === null) {\r\n      } else {\r\n        getDash.style.left = \"-110%\";\r\n      }\r\n\r\n      if (getChat === null) {\r\n      } else {\r\n        getChat.style.right = \"0\";\r\n      }\r\n    }\r\n\r\n    if (toggleMenu === true) {\r\n      if (getDash === null) {\r\n      } else {\r\n        getDash.style.left = \"0\";\r\n      }\r\n\r\n      if (getChat === null) {\r\n      } else {\r\n        getChat.style.right = \"-100%\";\r\n      }\r\n    }\r\n  };\r\n\r\n  currentDataFunc();\r\n  useEffect(() => {}, [messages]);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"glass\">\r\n        <div className=\"mobileMenu\" onClick={openCloseMobileMenu}>\r\n          {toggleMenu ? (\r\n            <svg className=\"svg-icon openMenu\" viewBox=\"0 0 20 20\">\r\n              <path\r\n                fill=\"#fff\"\r\n                d=\"M2.25,12.584c-0.713,0-1.292,0.578-1.292,1.291s0.579,1.291,1.292,1.291c0.713,0,1.292-0.578,1.292-1.291S2.963,12.584,2.25,12.584z M2.25,14.307c-0.238,0-0.43-0.193-0.43-0.432s0.192-0.432,0.43-0.432c0.238,0,0.431,0.193,0.431,0.432S2.488,14.307,2.25,14.307z M5.694,6.555H18.61c0.237,0,0.431-0.191,0.431-0.43s-0.193-0.431-0.431-0.431H5.694c-0.238,0-0.43,0.192-0.43,0.431S5.457,6.555,5.694,6.555z M2.25,8.708c-0.713,0-1.292,0.578-1.292,1.291c0,0.715,0.579,1.292,1.292,1.292c0.713,0,1.292-0.577,1.292-1.292C3.542,9.287,2.963,8.708,2.25,8.708z M2.25,10.43c-0.238,0-0.43-0.192-0.43-0.431c0-0.237,0.192-0.43,0.43-0.43c0.238,0,0.431,0.192,0.431,0.43C2.681,10.238,2.488,10.43,2.25,10.43z M18.61,9.57H5.694c-0.238,0-0.43,0.192-0.43,0.43c0,0.238,0.192,0.431,0.43,0.431H18.61c0.237,0,0.431-0.192,0.431-0.431C19.041,9.762,18.848,9.57,18.61,9.57z M18.61,13.443H5.694c-0.238,0-0.43,0.193-0.43,0.432s0.192,0.432,0.43,0.432H18.61c0.237,0,0.431-0.193,0.431-0.432S18.848,13.443,18.61,13.443z M2.25,4.833c-0.713,0-1.292,0.578-1.292,1.292c0,0.713,0.579,1.291,1.292,1.291c0.713,0,1.292-0.578,1.292-1.291C3.542,5.412,2.963,4.833,2.25,4.833z M2.25,6.555c-0.238,0-0.43-0.191-0.43-0.43s0.192-0.431,0.43-0.431c0.238,0,0.431,0.192,0.431,0.431S2.488,6.555,2.25,6.555z\"\r\n              ></path>\r\n            </svg>\r\n          ) : (\r\n            <svg className=\"svg-icon closeMenu\" viewBox=\"0 0 20 20\">\r\n              <path\r\n                fill=\"#fff\"\r\n                d=\"M12.71,7.291c-0.15-0.15-0.393-0.15-0.542,0L10,9.458L7.833,7.291c-0.15-0.15-0.392-0.15-0.542,0c-0.149,0.149-0.149,0.392,0,0.541L9.458,10l-2.168,2.167c-0.149,0.15-0.149,0.393,0,0.542c0.15,0.149,0.392,0.149,0.542,0L10,10.542l2.168,2.167c0.149,0.149,0.392,0.149,0.542,0c0.148-0.149,0.148-0.392,0-0.542L10.542,10l2.168-2.168C12.858,7.683,12.858,7.44,12.71,7.291z M10,1.188c-4.867,0-8.812,3.946-8.812,8.812c0,4.867,3.945,8.812,8.812,8.812s8.812-3.945,8.812-8.812C18.812,5.133,14.867,1.188,10,1.188z M10,18.046c-4.444,0-8.046-3.603-8.046-8.046c0-4.444,3.603-8.046,8.046-8.046c4.443,0,8.046,3.602,8.046,8.046C18.046,14.443,14.443,18.046,10,18.046z\"\r\n              ></path>\r\n            </svg>\r\n          )}\r\n        </div>\r\n        <div id=\"dash\" className=\"dashboard\">\r\n          <div className=\"userLogo\"></div>\r\n          <h1 className=\"nickname\"> Welcome {username}!</h1>\r\n          <h3 className=\"roomDescription\">Room ID: {roomId}</h3>\r\n          <div className=\"explanationDashboard\">\r\n            Share this number with your friends to invite them to the\r\n            conversation.\r\n          </div>\r\n          <button className=\"button\" onClick={() => leaveRoomFunc()}>\r\n            Leave room\r\n          </button>\r\n        </div>\r\n        <div id=\"chat\" className=\"chatSection\">\r\n          <div className=\"messages\">\r\n            {messages.map((message: any) => {\r\n              return (\r\n                <div className={`message ${message.source}`}>\r\n                  <h4 className={`user ${message.source}`}> {message.user}</h4>\r\n                  <p className=\"text\">{message.message}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"textArea\">\r\n            <div className=\"inputFields inputFieldsTextArea\">\r\n              <div className=\"username usernameTextArea\">\r\n                <textarea\r\n                  className=\"userInput userInputTextArea\"\r\n                  placeholder=\"Write your message here :)\"\r\n                  ref={messageRef}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"buttonTextArea\">\r\n              <button className=\"button btn\" onClick={() => sendMessage()}>\r\n                <svg className=\"svg-icon btn-svg\" viewBox=\"0 0 20 20\">\r\n                  <path\r\n                    fill=\"#fff\"\r\n                    d=\"M17.218,2.268L2.477,8.388C2.13,8.535,2.164,9.05,2.542,9.134L9.33,10.67l1.535,6.787c0.083,0.377,0.602,0.415,0.745,0.065l6.123-14.74C17.866,2.46,17.539,2.134,17.218,2.268 M3.92,8.641l11.772-4.89L9.535,9.909L3.92,8.641z M11.358,16.078l-1.268-5.613l6.157-6.157L11.358,16.078z\"\r\n                  ></path>\r\n                </svg>\r\n                <p className=\"btn-text\">Send</p>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SignUp.css\";\r\n\r\ninterface IViewProps {\r\n  signUpFunc: () => void;\r\n  usernameRef: any;\r\n  passRef: any;\r\n  passAgainRef: any;\r\n}\r\n\r\nconst SignUp: React.FC<IViewProps> = (prop) => {\r\n  const { signUpFunc, usernameRef, passRef, passAgainRef } = prop;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pinGeneratorContainer\">\r\n        <div className=\"logo\"></div>\r\n        <div className=\"title\">Chit - Chat</div>\r\n        <div className=\"explanation\">\r\n          Enter a nickname and a new password and press \"Create an account\" to\r\n          create a new account.\r\n        </div>\r\n        <div className=\"inputFields\">\r\n          <div className=\"username\">\r\n            <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n              <path\r\n                fill=\"#fff\"\r\n                fillOpacity=\"0.4\"\r\n                d=\"M12.443,9.672c0.203-0.496,0.329-1.052,0.329-1.652c0-1.969-1.241-3.565-2.772-3.565S7.228,6.051,7.228,8.02c0,0.599,0.126,1.156,0.33,1.652c-1.379,0.555-2.31,1.553-2.31,2.704c0,1.75,2.128,3.169,4.753,3.169c2.624,0,4.753-1.419,4.753-3.169C14.753,11.225,13.821,10.227,12.443,9.672z M10,5.247c1.094,0,1.98,1.242,1.98,2.773c0,1.531-0.887,2.772-1.98,2.772S8.02,9.551,8.02,8.02C8.02,6.489,8.906,5.247,10,5.247z M10,14.753c-2.187,0-3.96-1.063-3.96-2.377c0-0.854,0.757-1.596,1.885-2.015c0.508,0.745,1.245,1.224,2.076,1.224s1.567-0.479,2.076-1.224c1.127,0.418,1.885,1.162,1.885,2.015C13.961,13.689,12.188,14.753,10,14.753z M10,0.891c-5.031,0-9.109,4.079-9.109,9.109c0,5.031,4.079,9.109,9.109,9.109c5.031,0,9.109-4.078,9.109-9.109C19.109,4.969,15.031,0.891,10,0.891z M10,18.317c-4.593,0-8.317-3.725-8.317-8.317c0-4.593,3.724-8.317,8.317-8.317c4.593,0,8.317,3.724,8.317,8.317C18.317,14.593,14.593,18.317,10,18.317z\"\r\n              ></path>\r\n            </svg>\r\n            <input\r\n              type=\"username\"\r\n              className=\"userInput\"\r\n              placeholder=\"Nickname\"\r\n              ref={usernameRef}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"inputFields\">\r\n          <div className=\"username\">\r\n            <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n              <path\r\n                fill=\"#fff\"\r\n                fillOpacity=\"0.4\"\r\n                d=\"M17.308,7.564h-1.993c0-2.929-2.385-5.314-5.314-5.314S4.686,4.635,4.686,7.564H2.693c-0.244,0-0.443,0.2-0.443,0.443v9.3c0,0.243,0.199,0.442,0.443,0.442h14.615c0.243,0,0.442-0.199,0.442-0.442v-9.3C17.75,7.764,17.551,7.564,17.308,7.564 M10,3.136c2.442,0,4.43,1.986,4.43,4.428H5.571C5.571,5.122,7.558,3.136,10,3.136 M16.865,16.864H3.136V8.45h13.729V16.864z M10,10.664c-0.854,0-1.55,0.696-1.55,1.551c0,0.699,0.467,1.292,1.107,1.485v0.95c0,0.243,0.2,0.442,0.443,0.442s0.443-0.199,0.443-0.442V13.7c0.64-0.193,1.106-0.786,1.106-1.485C11.55,11.36,10.854,10.664,10,10.664 M10,12.878c-0.366,0-0.664-0.298-0.664-0.663c0-0.366,0.298-0.665,0.664-0.665c0.365,0,0.664,0.299,0.664,0.665C10.664,12.58,10.365,12.878,10,12.878\"\r\n              ></path>\r\n            </svg>\r\n            <input\r\n              type=\"password\"\r\n              className=\"userInput\"\r\n              placeholder=\"Password\"\r\n              ref={passRef}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"inputFields\">\r\n          <div className=\"username\">\r\n            <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n              <path\r\n                fill=\"#fff\"\r\n                fillOpacity=\"0.4\"\r\n                d=\"M17.308,7.564h-1.993c0-2.929-2.385-5.314-5.314-5.314S4.686,4.635,4.686,7.564H2.693c-0.244,0-0.443,0.2-0.443,0.443v9.3c0,0.243,0.199,0.442,0.443,0.442h14.615c0.243,0,0.442-0.199,0.442-0.442v-9.3C17.75,7.764,17.551,7.564,17.308,7.564 M10,3.136c2.442,0,4.43,1.986,4.43,4.428H5.571C5.571,5.122,7.558,3.136,10,3.136 M16.865,16.864H3.136V8.45h13.729V16.864z M10,10.664c-0.854,0-1.55,0.696-1.55,1.551c0,0.699,0.467,1.292,1.107,1.485v0.95c0,0.243,0.2,0.442,0.443,0.442s0.443-0.199,0.443-0.442V13.7c0.64-0.193,1.106-0.786,1.106-1.485C11.55,11.36,10.854,10.664,10,10.664 M10,12.878c-0.366,0-0.664-0.298-0.664-0.663c0-0.366,0.298-0.665,0.664-0.665c0.365,0,0.664,0.299,0.664,0.665C10.664,12.58,10.365,12.878,10,12.878\"\r\n              ></path>\r\n            </svg>\r\n            <input\r\n              type=\"password\"\r\n              className=\"userInput\"\r\n              placeholder=\"Confirm password\"\r\n              ref={passAgainRef}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button className=\"button\" onClick={() => signUpFunc()}>\r\n          Create an account\r\n        </button>\r\n        <div className=\"explanation\">\r\n          Already have an account? <Link to=\"/Chit-Chat/\">Log in!</Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\ninterface IViewProps {\r\n  logInFunc: () => void;\r\n  usernameRef: any;\r\n  passRef: any;\r\n}\r\n\r\nconst Login: React.FC<IViewProps> = (prop) => {\r\n  const { logInFunc, usernameRef, passRef } = prop;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pinGeneratorContainer\">\r\n        <div className=\"logo\"></div>\r\n        <div className=\"title\">Chit - Chat</div>\r\n        <div className=\"explanation\">\r\n          Enter your nickname and password and press \"Log in\" to log in the\r\n          server.\r\n        </div>\r\n        <div className=\"inputFields\">\r\n          <div className=\"username\">\r\n            <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n              <path\r\n                fill=\"#fff\"\r\n                fillOpacity=\"0.4\"\r\n                d=\"M12.443,9.672c0.203-0.496,0.329-1.052,0.329-1.652c0-1.969-1.241-3.565-2.772-3.565S7.228,6.051,7.228,8.02c0,0.599,0.126,1.156,0.33,1.652c-1.379,0.555-2.31,1.553-2.31,2.704c0,1.75,2.128,3.169,4.753,3.169c2.624,0,4.753-1.419,4.753-3.169C14.753,11.225,13.821,10.227,12.443,9.672z M10,5.247c1.094,0,1.98,1.242,1.98,2.773c0,1.531-0.887,2.772-1.98,2.772S8.02,9.551,8.02,8.02C8.02,6.489,8.906,5.247,10,5.247z M10,14.753c-2.187,0-3.96-1.063-3.96-2.377c0-0.854,0.757-1.596,1.885-2.015c0.508,0.745,1.245,1.224,2.076,1.224s1.567-0.479,2.076-1.224c1.127,0.418,1.885,1.162,1.885,2.015C13.961,13.689,12.188,14.753,10,14.753z M10,0.891c-5.031,0-9.109,4.079-9.109,9.109c0,5.031,4.079,9.109,9.109,9.109c5.031,0,9.109-4.078,9.109-9.109C19.109,4.969,15.031,0.891,10,0.891z M10,18.317c-4.593,0-8.317-3.725-8.317-8.317c0-4.593,3.724-8.317,8.317-8.317c4.593,0,8.317,3.724,8.317,8.317C18.317,14.593,14.593,18.317,10,18.317z\"\r\n              ></path>\r\n            </svg>\r\n            <input\r\n              type=\"username\"\r\n              className=\"userInput\"\r\n              placeholder=\"Nickname\"\r\n              ref={usernameRef}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"inputFields\">\r\n          <div className=\"username\">\r\n            <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n              <path\r\n                fill=\"#fff\"\r\n                fillOpacity=\"0.4\"\r\n                d=\"M17.308,7.564h-1.993c0-2.929-2.385-5.314-5.314-5.314S4.686,4.635,4.686,7.564H2.693c-0.244,0-0.443,0.2-0.443,0.443v9.3c0,0.243,0.199,0.442,0.443,0.442h14.615c0.243,0,0.442-0.199,0.442-0.442v-9.3C17.75,7.764,17.551,7.564,17.308,7.564 M10,3.136c2.442,0,4.43,1.986,4.43,4.428H5.571C5.571,5.122,7.558,3.136,10,3.136 M16.865,16.864H3.136V8.45h13.729V16.864z M10,10.664c-0.854,0-1.55,0.696-1.55,1.551c0,0.699,0.467,1.292,1.107,1.485v0.95c0,0.243,0.2,0.442,0.443,0.442s0.443-0.199,0.443-0.442V13.7c0.64-0.193,1.106-0.786,1.106-1.485C11.55,11.36,10.854,10.664,10,10.664 M10,12.878c-0.366,0-0.664-0.298-0.664-0.663c0-0.366,0.298-0.665,0.664-0.665c0.365,0,0.664,0.299,0.664,0.665C10.664,12.58,10.365,12.878,10,12.878\"\r\n              ></path>\r\n            </svg>\r\n            <input\r\n              type=\"password\"\r\n              className=\"userInput\"\r\n              placeholder=\"Password\"\r\n              ref={passRef}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"button\" onClick={() => logInFunc()}>\r\n          Log in\r\n        </button>\r\n        <div className=\"explanation\">\r\n          Don't have an account? <Link to=\"/Chit-Chat/signup\">Sign up!</Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export const GRAPHQL_API = \"https://chit-chatdegg.herokuapp.com/graphql\";\r\n// export const GRAPHQL_API = \"http://localhost:8080/graphql\";\r\n\r\nexport function saveToFirestoreQuery(\r\n  nickname: String,\r\n  password: String\r\n): string {\r\n  return `query {saveToFirestore(newUser: \"{\\\\\"userId\\\\\":1,\\\\\"nickname\\\\\":\\\\\"${nickname}\\\\\",\\\\\"password\\\\\":\\\\\"${password}\\\\\",\\\\\"connected\\\\\":true, \\\\\"chatRooms\\\\\":null, \\\\\"currentRoom\\\\\":null}\")}`;\r\n}\r\n\r\nexport function saveUserChatRoomToFirestoreQuery(\r\n  userId: number,\r\n  roomId: string\r\n): string {\r\n  return `query {saveUserChatRoomToFirestore(userId: ${userId}, roomId: \"${roomId}\")}`;\r\n}\r\n\r\nexport function removeUserChatRoomFromFirebaseQuery(\r\n  userId: number,\r\n  roomId: string\r\n): string {\r\n  return `query {removeUserChatRoomFromFirebase(userId: ${userId}, roomId: \"${roomId}\")}`;\r\n}\r\n\r\nexport function loginUserQuery(nickname: string, password: string): string {\r\n  return `query {loginUser(userNick: \"${nickname}\", userPass: \"${password}\")}`;\r\n}\r\n\r\nexport function logoutUserQuery(userId: number): string {\r\n  return `query {logoutUser(userId: ${userId})}`;\r\n}\r\n\r\nexport function isRoomIDAvailableQuery(roomId: string): string {\r\n  return `query {isRoomIDAvailable(roomId: \"${roomId}\")}`;\r\n}\r\n\r\nexport function createNewRoomQuery(roomId: string): string {\r\n  return `query {createNewRoom(roomId: \"${roomId}\")}`;\r\n}\r\n\r\nexport function setUserCurrentRoomQuery(\r\n  userId: number,\r\n  roomId: string\r\n): string {\r\n  return `query {setUserCurrentRoom(userId: ${userId}, roomId: \"${roomId}\")}`;\r\n}\r\n\r\nexport function joinUserToRoomQuery(userId: number, roomId: string) {\r\n  return `query {joinUserToRoom(userId: ${userId}, roomId: \"${roomId}\")}`;\r\n}\r\n\r\nexport function leaveCurrentRoomQuery(userId: number): String {\r\n  return `query {leaveCurrentRoom(userId: ${userId})}`;\r\n}\r\n\r\nexport function getLastMessagesQuery(roomId: String): String {\r\n  return `query {getLastMessages(roomId: \"${roomId}\"){\r\n    roomId,\r\n    messageId,\r\n    user,\r\n    message,\r\n    source\r\n  }}`;\r\n}\r\n","import axios from \"axios\";\r\nimport * as GraphQLQueries from \"../util/Constants\";\r\n\r\nclass Auth {\r\n  authenticated;\r\n  constructor() {\r\n    this.authenticated = false;\r\n  }\r\n\r\n  async login(nickname: string, password: string): Promise<boolean> {\r\n    const loginQuery = GraphQLQueries.loginUserQuery(nickname, password);\r\n    const loginResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n      query: loginQuery,\r\n    });\r\n    return loginResult.data.data.loginUser;\r\n  }\r\n\r\n  async logout(userId: number): Promise<boolean> {\r\n    const logoutQuery = GraphQLQueries.logoutUserQuery(userId);\r\n    const logoutResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n      query: logoutQuery,\r\n    });\r\n    return logoutResult.data.data.logoutUser;\r\n  }\r\n\r\n  async isUserLogged(userId: number): Promise<boolean> {\r\n    const connectedResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n      query: `query{getUser(userId: ${userId}){\r\n              connected\r\n            }}`,\r\n    });\r\n    return connectedResult.data.data.getUser.connected;\r\n  }\r\n}\r\n\r\nexport default new Auth();\r\n","import React from \"react\";\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport Auth from \"../util/Auth\";\r\n\r\ninterface IProtRouteProps extends RouteProps {}\r\nconst ProtectedRoute: React.FC<IProtRouteProps> = ({ ...rest }) => {\r\n  const userIdStr: string | null = sessionStorage.getItem(\"localUserId\");\r\n  const userId: number | null = userIdStr !== null ? parseInt(userIdStr) : null;\r\n  var logged;\r\n\r\n  if (userId !== null && userId !== 0) {\r\n    Auth.isUserLogged(userId).then((res) => (logged = res));\r\n  } else {\r\n    logged = false;\r\n  }\r\n\r\n  if (logged === false) return <Redirect to=\"/Chit-Chat/\" />;\r\n  return <Route {...rest}></Route>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","function generatePinAsString(numberOfDigits: number): string {\r\n  var numberToString: string = \"\";\r\n\r\n  for (let i = 0; i < numberOfDigits; i++) {\r\n    let randNumber: number = Math.floor(Math.random() * 10);\r\n    numberToString = numberToString + randNumber.toString();\r\n  }\r\n\r\n  return numberToString;\r\n}\r\n\r\nexport default generatePinAsString;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport CreateRoom from \"../view/CreateRoom\";\r\nimport Chat from \"../view/Chat\";\r\nimport SignUp from \"../view/SignUp\";\r\nimport Login from \"../view/Login\";\r\nimport ProtectedRoute from \"../util/ProtectedRoute\";\r\n\r\nimport generatePinAsString from \"../util/GeneratePinAsString\";\r\nimport * as GraphQLQueries from \"../util/Constants\";\r\nimport Auth from \"../util/Auth\";\r\n\r\nconst Controller: React.FC = () => {\r\n  const [currentUser, setCurrentUser] = useState<string>(\"\");\r\n  const [currentRoom, setCurrentRoom] = useState<string>(\"\");\r\n  const [messagess, setMessagess] = useState<any>([]);\r\n  const [websocket, setWebsocket] = useState<any>(null);\r\n  const usernameRef = useRef<HTMLInputElement>(null);\r\n  const passRef = useRef<HTMLInputElement>(null);\r\n  const passAgainRef = useRef<HTMLInputElement>(null);\r\n  const roomIDRef = useRef<HTMLInputElement>(null);\r\n  const messageRef = useRef<HTMLInputElement>(null);\r\n  const history = useHistory();\r\n  var messages: any = [];\r\n\r\n  ///////////////////////////////////////////// Create new account ////////////////////////////////\r\n\r\n  async function signUp() {\r\n    if (\r\n      usernameRef.current &&\r\n      usernameRef &&\r\n      passRef.current &&\r\n      passRef &&\r\n      passAgainRef.current &&\r\n      passAgainRef\r\n    ) {\r\n      if (\r\n        usernameRef.current.value !== \"\" &&\r\n        passRef.current.value !== \"\" &&\r\n        passRef.current.value === passAgainRef.current.value\r\n      ) {\r\n        const saveUserQuery = GraphQLQueries.saveToFirestoreQuery(\r\n          usernameRef.current.value,\r\n          passRef.current.value\r\n        );\r\n\r\n        const saveUserResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n          query: saveUserQuery,\r\n        });\r\n        const newUserId = saveUserResult.data.data.saveToFirestore;\r\n\r\n        if (newUserId !== 0) {\r\n          sessionStorage.setItem(\"localUserId\", newUserId);\r\n          history.push(\"/Chit-Chat/createRoom\");\r\n        } else {\r\n          alert(\"The nickname is already in use :(\");\r\n        }\r\n      } else if (passRef.current.value !== passAgainRef.current.value) {\r\n        alert(\"The password does not match\");\r\n      } else if (usernameRef.current.value === \"\") {\r\n        alert(\"Enter a nickname\");\r\n      } else {\r\n        alert(\"Enter a password\");\r\n      }\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////// Log in ////////////////////////////////\r\n  async function logIn() {\r\n    if (usernameRef.current && usernameRef && passRef.current && passRef) {\r\n      const loggedQuery = GraphQLQueries.loginUserQuery(\r\n        usernameRef.current.value,\r\n        passRef.current.value\r\n      );\r\n      const loggedResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n        query: loggedQuery,\r\n      });\r\n      const isUserLogged = loggedResult.data.data.loginUser;\r\n      if (isUserLogged) {\r\n        const loggedUserResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n          query: `query {getUserByName(userNick: \"${usernameRef.current.value}\"){\r\n              userId\r\n          }}`,\r\n        });\r\n        const loggedUserId = loggedUserResult.data.data.getUserByName.userId;\r\n        sessionStorage.setItem(\"localUserId\", loggedUserId);\r\n        history.push(\"/Chit-Chat/createRoom\");\r\n      } else {\r\n        alert(\"The nickname or the password is incorrect\");\r\n      }\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////// Log out ////////////////////////////////\r\n  async function logOut() {\r\n    const userIdStr: string | null = sessionStorage.getItem(\"localUserId\");\r\n    const userId: number | null =\r\n      userIdStr !== null ? parseInt(userIdStr) : null;\r\n\r\n    if (userId !== null) {\r\n      Auth.logout(userId).then(() => {\r\n        sessionStorage.setItem(\"localUserId\", \"\");\r\n        sessionStorage.setItem(\"currentUser\", \"\");\r\n        history.push(\"/Chit-Chat/\");\r\n      });\r\n    }\r\n  }\r\n  ///////////////////////////////////////////// Create room ////////////////////////////////\r\n\r\n  async function createRoom() {\r\n    const pinGenerator = generatePinAsString;\r\n\r\n    let roomId: string = pinGenerator(8);\r\n\r\n    const roomAvailableQuery = GraphQLQueries.isRoomIDAvailableQuery(roomId);\r\n    const loggedResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n      query: roomAvailableQuery,\r\n    });\r\n\r\n    const isRoomAvailable = loggedResult.data.data.isRoomIDAvailable;\r\n\r\n    if (isRoomAvailable) {\r\n      const createRoomQuery = GraphQLQueries.createNewRoomQuery(roomId);\r\n      const createRoomResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n        query: createRoomQuery,\r\n      });\r\n\r\n      const userIdStr: string | null = sessionStorage.getItem(\"localUserId\");\r\n      const userId: number | null =\r\n        userIdStr !== null ? parseInt(userIdStr) : null;\r\n\r\n      if (userId !== null) {\r\n        const saveRoomToUserQuery = GraphQLQueries.saveUserChatRoomToFirestoreQuery(\r\n          userId,\r\n          roomId\r\n        );\r\n        const saveRoomToUserResult = await axios.post(\r\n          GraphQLQueries.GRAPHQL_API,\r\n          {\r\n            query: saveRoomToUserQuery,\r\n          }\r\n        );\r\n\r\n        const setUserCurrentRoomQuery = GraphQLQueries.setUserCurrentRoomQuery(\r\n          userId,\r\n          roomId\r\n        );\r\n        const setUserCurrentRoomResult = await axios.post(\r\n          GraphQLQueries.GRAPHQL_API,\r\n          {\r\n            query: setUserCurrentRoomQuery,\r\n          }\r\n        );\r\n        history.push(\"/Chit-Chat/chat\");\r\n      }\r\n    } else {\r\n      createRoom();\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////// Get current user data ////////////////////////////////\r\n  async function getCurrentUserData() {\r\n    const userIdStr: string | null = sessionStorage.getItem(\"localUserId\");\r\n    const userId: number | null =\r\n      userIdStr !== null ? parseInt(userIdStr) : null;\r\n\r\n    const userDataResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n      query: `query{getUser(userId: ${userId}){\r\n              currentRoom,\r\n              nickname\r\n            }}`,\r\n    });\r\n\r\n    setCurrentRoom(userDataResult.data.data.getUser.currentRoom);\r\n    setCurrentUser(userDataResult.data.data.getUser.nickname);\r\n    sessionStorage.setItem(\"currentRoom\", currentRoom);\r\n    sessionStorage.setItem(\"currentUser\", currentUser);\r\n  }\r\n\r\n  ///////////////////////////////////////////// Join a room ////////////////////////////////\r\n  async function joinRoom() {\r\n    if (roomIDRef.current && roomIDRef) {\r\n      if (\r\n        roomIDRef.current.value !== \"\" &&\r\n        roomIDRef.current.value.length === 8\r\n      ) {\r\n        const userIdStr: string | null = sessionStorage.getItem(\"localUserId\");\r\n        const userId: number | null =\r\n          userIdStr !== null ? parseInt(userIdStr) : null;\r\n\r\n        if (userId !== null) {\r\n          const joinRoomQuery = GraphQLQueries.joinUserToRoomQuery(\r\n            userId,\r\n            roomIDRef.current.value\r\n          );\r\n          const joinRoomResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n            query: joinRoomQuery,\r\n          });\r\n\r\n          if (joinRoomResult.data.data.joinUserToRoom) {\r\n            history.push(\"/Chit-Chat/chat\");\r\n          } else {\r\n            alert(\"The room does not exist\");\r\n          }\r\n        }\r\n      } else {\r\n        alert(\"Enter a valid room Id (Only number and 8 digits)\");\r\n      }\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////// Leave room ////////////////////////////////\r\n  async function leaveRoom() {\r\n    const userIdStr: string | null = sessionStorage.getItem(\"localUserId\");\r\n    const userId: number | null =\r\n      userIdStr !== null ? parseInt(userIdStr) : null;\r\n\r\n    if (userId !== null) {\r\n      const leaveRoomQuery = GraphQLQueries.leaveCurrentRoomQuery(userId);\r\n      const leaveRoomResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n        query: leaveRoomQuery,\r\n      });\r\n\r\n      sessionStorage.setItem(\"currentRoom\", \"\");\r\n      history.push(\"/Chit-Chat/createRoom\");\r\n      websocket.close();\r\n      messages.length = 0;\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////// Connection with WebSocket server ////////////////////////////////\r\n\r\n  function connectToWebsocket() {\r\n    // const socket = new WebSocket(\"wss://localhost:9000\");\r\n    const socket = new WebSocket(\"https://chit-chatdegg.herokuapp.com/\");\r\n    setWebsocket(socket);\r\n  }\r\n\r\n  ///////////////////////////////////////////// handling messages ////////////////////////////////\r\n\r\n  async function sendMessage() {\r\n    if (messageRef && messageRef.current && messageRef.current.value !== \"\") {\r\n      let payload = {\r\n        roomId: sessionStorage.getItem(\"currentRoom\"),\r\n        messageId: \"1\",\r\n        user: sessionStorage.getItem(\"currentUser\"),\r\n        message: messageRef.current.value,\r\n        source: \"external\",\r\n      };\r\n      websocket.send(JSON.stringify(payload));\r\n\r\n      messageRef.current.value = \"\";\r\n    }\r\n  }\r\n\r\n  // async function getLastMessages() {\r\n  //   const localRoom: string | null = sessionStorage.getItem(\"currentRoom\");\r\n  //   const localUser: string | null = sessionStorage.getItem(\"currentUser\");\r\n  //   if (localRoom !== null) {\r\n  //     const lastMessagesQuery = GraphQLQueries.getLastMessagesQuery(localRoom);\r\n  //     const lastMessagesResult = await axios.post(GraphQLQueries.GRAPHQL_API, {\r\n  //       query: lastMessagesQuery,\r\n  //     });\r\n\r\n  //     console.log(\"getting last messages\");\r\n\r\n  //     console.log(lastMessagesResult.data.data.getLastMessages);\r\n\r\n  //     const lastMessages = lastMessagesResult.data.data.getLastMessages;\r\n  //     lastMessages.map((message: any) => {\r\n  //       if (message.user === localUser || message.user === \"Chit-Chat\") {\r\n  //         message.source = \"local\";\r\n  //       }\r\n  //       messages = [...messages, message];\r\n  //     });\r\n\r\n  //     console.log(messages);\r\n  //   }\r\n  // }\r\n\r\n  if (websocket !== null) {\r\n    // getLastMessages();\r\n\r\n    websocket.onmessage = (message: any) => {\r\n      const localRoom: string | null = sessionStorage.getItem(\"currentRoom\");\r\n      const localUser: string | null = sessionStorage.getItem(\"currentUser\");\r\n      var incomingMessage = JSON.parse(message.data);\r\n\r\n      if (localRoom !== null && localUser !== null) {\r\n        if (incomingMessage.roomId === localRoom) {\r\n          if (\r\n            incomingMessage.user === localUser ||\r\n            incomingMessage.user === \"Chit-Chat\"\r\n          ) {\r\n            incomingMessage.source = \"local\";\r\n          }\r\n          messages = [...messages, incomingMessage];\r\n          setMessagess([...messagess, incomingMessage]);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/Chit-Chat/\">\r\n          <Login\r\n            logInFunc={logIn}\r\n            usernameRef={usernameRef}\r\n            passRef={passRef}\r\n          />\r\n        </Route>\r\n        <Route path=\"/Chit-Chat/signup\">\r\n          <SignUp\r\n            signUpFunc={signUp}\r\n            usernameRef={usernameRef}\r\n            passRef={passRef}\r\n            passAgainRef={passAgainRef}\r\n          />\r\n        </Route>\r\n        <ProtectedRoute path=\"/Chit-Chat/createRoom\">\r\n          <CreateRoom\r\n            createRoomFunc={createRoom}\r\n            joinRoomFunc={joinRoom}\r\n            logOutFunc={logOut}\r\n            roomIDRef={roomIDRef}\r\n            connectToWebsocketFunc={connectToWebsocket}\r\n          />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/Chit-Chat/chat\">\r\n          <Chat\r\n            username={currentUser}\r\n            roomId={currentRoom}\r\n            sendMessage={sendMessage}\r\n            currentDataFunc={getCurrentUserData}\r\n            leaveRoomFunc={leaveRoom}\r\n            messageRef={messageRef}\r\n            messages={messagess}\r\n          />\r\n        </ProtectedRoute>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Controller;\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Background from \"./components/view/background/Background\";\nimport Controller from \"./components/Controller/Controller\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <div id=\"background\">\n        <Background />\n      </div>\n      <div id=\"content\">\n        <Router>\n          <Controller />\n        </Router>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}